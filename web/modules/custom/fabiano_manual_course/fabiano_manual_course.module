<?php

/**
 *Implements hookFORM ID alter ();
 */

function  fabiano_node_article_from_node_article_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
    $form['fabiano'] = 'anything';
    devel_dump ($form, 'form dump');
    devel_dump ($form_state, 'form_state dump');
    devel_dump ($form_id, 'form_id dump' );
    die();
/*
    if (isset($form['type']) && $form['type']['#value'] . '_node_settings' == $form_id) {
      $upload_enabled_types = \Drupal::config('my_module.settings')
        ->get('upload_enabled_types');
      $form['workflow']['upload_' . $form['type']['#value']] = [
        '#type' => 'radios',
        '#title' => t('Attachments'),
        '#default_value' => in_array($form['type']['#value'], $upload_enabled_types) ? 1 : 0,
        '#options' => [
          t('Disabled'),
          t('Enabled'),
        ],
      ];

      // Add a custom submit handler to save the array of types back to the config file.
      $form['actions']['submit']['#submit'][] = 'my_module_upload_enabled_types_submit';
    }  */


  }

/*
Implements hooks pre-process
*/

  function fabiano_manual_course_preprocess(&$variables, $hook) {

  // devel_dump($variables, 'dump variables');
  // devel_dump($hook, 'dump hook');
  //  die();

/*
    static $hooks;

    // Add contextual links to the variables, if the user has permission.
    if (!\Drupal::currentUser()
      ->hasPermission('access contextual links')) {
      return;
    }
    if (!isset($hooks)) {
      $hooks = \Drupal::service('theme.registry')
        ->get();
    }

    // Determine the primary theme function argument.
    if (isset($hooks[$hook]['variables'])) {
      $keys = array_keys($hooks[$hook]['variables']);
      $key = $keys[0];
    }
    else {
      $key = $hooks[$hook]['render element'];
    }
    if (isset($variables[$key])) {
      $element = $variables[$key];
    }
    if (isset($element) && is_array($element) && !empty($element['#contextual_links'])) {
      $variables['title_suffix']['contextual_links'] = contextual_links_view($element);
      if (!empty($variables['title_suffix']['contextual_links'])) {
        $variables['attributes']['class'][] = 'contextual-links-region';
      }
      */

    }
